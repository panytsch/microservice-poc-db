consumes:
- application/json
definitions:
  CreateNewUserRequest:
    properties:
      Name:
        type: string
        uniqueItems: true
      Password:
        type: string
    required:
    - Name
    - Password
    type: object
    x-go-package: github.com/panytsch/microservice-poc-db/go/rest_v1
  CreateNewUserResponse:
    properties:
      ID:
        format: uint64
        type: integer
      Name:
        type: string
    type: object
    x-go-package: github.com/panytsch/microservice-poc-db/go/rest_v1
  ErrorCode:
    format: uint16
    type: integer
    x-go-package: github.com/panytsch/microservice-poc-db/go/rest_v1
  ErrorResponse:
    properties:
      Code:
        $ref: '#/definitions/ErrorCode'
      Message:
        description: Error description
        type: string
    type: object
    x-go-package: github.com/panytsch/microservice-poc-db/go/rest_v1
  GetRefundResponse:
    properties:
      Amount:
        $ref: '#/definitions/RefundAmount'
      ID:
        format: uint64
        type: integer
      Status:
        $ref: '#/definitions/RefundStatus'
    type: object
    x-go-package: github.com/panytsch/microservice-poc-db/go/rest_v1
  GetRefundsResponse:
    properties:
      Amount:
        $ref: '#/definitions/RefundAmount'
      ID:
        format: uint64
        type: integer
      Status:
        $ref: '#/definitions/RefundStatus'
    type: object
    x-go-package: github.com/panytsch/microservice-poc-db/go/rest_v1
  GetTransactionResponse:
    properties:
      Amount:
        $ref: '#/definitions/TransactionAmount'
      ID:
        format: uint64
        type: integer
      Status:
        $ref: '#/definitions/TransactionStatus'
    type: object
    x-go-package: github.com/panytsch/microservice-poc-db/go/rest_v1
  GetTransactionsResponse:
    properties:
      Amount:
        $ref: '#/definitions/TransactionAmount'
      ID:
        format: uint64
        type: integer
      Status:
        $ref: '#/definitions/TransactionStatus'
    type: object
    x-go-package: github.com/panytsch/microservice-poc-db/go/rest_v1
  GetUserRequest:
    properties:
      Name:
        type: string
      Password:
        type: string
    required:
    - Name
    - Password
    type: object
    x-go-package: github.com/panytsch/microservice-poc-db/go/rest_v1
  MakeRefundRequest:
    properties:
      Amount:
        $ref: '#/definitions/RefundAmount'
    required:
    - Amount
    type: object
    x-go-package: github.com/panytsch/microservice-poc-db/go/rest_v1
  MakeRefundResponse:
    properties:
      Amount:
        $ref: '#/definitions/RefundAmount'
      ID:
        format: uint64
        type: integer
      Status:
        $ref: '#/definitions/RefundStatus'
    type: object
    x-go-package: github.com/panytsch/microservice-poc-db/go/rest_v1
  MakeTransactionRequest:
    properties:
      Amount:
        $ref: '#/definitions/TransactionAmount'
    required:
    - Amount
    type: object
    x-go-package: github.com/panytsch/microservice-poc-db/go/rest_v1
  MakeTransactionResponse:
    properties:
      Amount:
        $ref: '#/definitions/TransactionAmount'
      ID:
        format: uint64
        type: integer
      Status:
        $ref: '#/definitions/TransactionStatus'
    type: object
    x-go-package: github.com/panytsch/microservice-poc-db/go/rest_v1
  NoDataFoundResponse:
    properties:
      Code:
        $ref: '#/definitions/ErrorCode'
      Message:
        description: Error description
        type: string
    type: object
    x-go-package: github.com/panytsch/microservice-poc-db/go/rest_v1
  RefundAmount:
    format: int64
    type: integer
    x-go-package: github.com/panytsch/microservice-poc-db/go/pkg/db
  RefundStatus:
    description: |-
      1 RefundStatusCreated
      2 RefundStatusInProgress
      3 RefundStatusFinished
      4 RefundStatusCancelled
    format: int64
    type: integer
    x-go-package: github.com/panytsch/microservice-poc-db/go/pkg/db
  TransactionAmount:
    format: int64
    type: integer
    x-go-package: github.com/panytsch/microservice-poc-db/go/pkg/db
  TransactionStatus:
    description: |-
      1 TransactionStatusCreated
      2 TransactionStatusInProgress
      3 TransactionStatusInFinished
      4 TransactionStatusInCancelled
    format: int64
    type: integer
    x-go-package: github.com/panytsch/microservice-poc-db/go/pkg/db
info:
  contact:
    email: gfyroman@gmail.com
    name: Roman Panasiuk
  description: |-
    the purpose of this application is to provide an application
    to work with DB like with service
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  title: DB microservice REST API.
  version: 1.0.0
paths:
  /rest/v1//users/get:
    post:
      description: Get user
      operationId: getUser
      parameters:
      - in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/GetUserRequest'
      responses:
        "200":
          $ref: '#/responses/getUser'
        "400":
          $ref: '#/responses/errorResponse'
      tags:
      - user
  /rest/v1/refunds:
    get:
      description: Get few Refunds
      operationId: getRefunds
      parameters:
      - description: User token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/getRefunds'
        "400":
          $ref: '#/responses/errorResponse'
        "401":
          $ref: '#/responses/errorResponse'
      tags:
      - refund
    post:
      description: Create new Refund
      operationId: createRefund
      parameters:
      - description: User token
        in: header
        name: Authorization
        type: string
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/MakeRefundRequest'
      responses:
        "201":
          $ref: '#/responses/createRefund'
        "400":
          $ref: '#/responses/errorResponse'
        "401":
          $ref: '#/responses/errorResponse'
      tags:
      - refund
  /rest/v1/refunds/{RefundID}:
    get:
      description: Get one Refund
      operationId: getRefund
      parameters:
      - description: User token
        in: header
        name: Authorization
        required: true
        type: string
      - format: uint64
        in: path
        name: RefundID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/getRefund'
        "400":
          $ref: '#/responses/errorResponse'
        "401":
          $ref: '#/responses/errorResponse'
      tags:
      - refund
  /rest/v1/transactions:
    get:
      description: Get few Transaction
      operationId: getTransactions
      parameters:
      - description: User token
        in: header
        name: Authorization
        required: true
        type: string
      responses:
        "200":
          $ref: '#/responses/getTransactions'
        "400":
          $ref: '#/responses/errorResponse'
        "401":
          $ref: '#/responses/errorResponse'
      tags:
      - transaction
    post:
      description: Create new Transaction
      operationId: createTransaction
      parameters:
      - description: User token
        in: header
        name: Authorization
        type: string
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/MakeTransactionRequest'
      responses:
        "201":
          $ref: '#/responses/createTransaction'
        "400":
          $ref: '#/responses/errorResponse'
        "401":
          $ref: '#/responses/errorResponse'
      tags:
      - transaction
  /rest/v1/transactions/{TransactionID}:
    get:
      description: Get one Transaction
      operationId: getTransaction
      parameters:
      - description: User token
        in: header
        name: Authorization
        required: true
        type: string
      - format: uint64
        in: path
        name: TransactionID
        required: true
        type: integer
      responses:
        "200":
          $ref: '#/responses/getTransaction'
        "400":
          $ref: '#/responses/errorResponse'
        "401":
          $ref: '#/responses/errorResponse'
      tags:
      - transaction
  /rest/v1/users:
    post:
      description: Create new user
      operationId: createUser
      parameters:
      - in: body
        name: Body
        schema:
          $ref: '#/definitions/CreateNewUserRequest'
      responses:
        "201":
          $ref: '#/responses/createUser'
        "400":
          $ref: '#/responses/errorResponse'
      tags:
      - user
produces:
- application/json
responses:
  createRefund:
    schema:
      $ref: '#/definitions/MakeRefundResponse'
  createTransaction:
    schema:
      $ref: '#/definitions/MakeTransactionResponse'
  createUser:
    schema:
      $ref: '#/definitions/CreateNewUserResponse'
  errorResponse:
    schema:
      $ref: '#/definitions/ErrorResponse'
  getRefund:
    schema:
      $ref: '#/definitions/GetRefundResponse'
  getRefunds:
    schema:
      items:
        $ref: '#/definitions/GetRefundsResponse'
      type: array
  getTransaction:
    schema:
      $ref: '#/definitions/GetTransactionResponse'
  getTransactions:
    schema:
      items:
        $ref: '#/definitions/GetTransactionsResponse'
      type: array
  getUser:
    schema:
      $ref: '#/definitions/CreateNewUserResponse'
  noDataFound:
    schema:
      $ref: '#/definitions/NoDataFoundResponse'
schemes:
- http
swagger: "2.0"
